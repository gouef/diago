name: Create Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install GitHub CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Authenticate GitHub CLI
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: gh auth setup-git

      - name: Determine release type
        id: release_type
        run: |
          TAG_NAME=${{ github.ref_name }}
          if [[ "$TAG_NAME" == *beta* ]]; then
            echo "release_type=Pre-release (Beta)" >> $GITHUB_ENV
            echo "prerelease=true" >> $GITHUB_ENV
          elif [[ "$TAG_NAME" == *rc* ]]; then
            echo "release_type=Pre-release (Release Candidate)" >> $GITHUB_ENV
            echo "prerelease=true" >> $GITHUB_ENV
          else
            echo "release_type=Stable" >> $GITHUB_ENV
            echo "prerelease=false" >> $GITHUB_ENV
          fi

      - name: Get commits since last tag
        id: commits
        run: |
          PREV_TAG=$(git describe --tags --abbrev=0 HEAD^)
          echo "previous_tag=$PREV_TAG" >> $GITHUB_ENV
          
          COMMITS=""
          while read -r commit_hash; do
            COMMIT_MSG=$(git log -n 1 --pretty=format:"%s" "$commit_hash")
            AUTHOR=$(gh api "/repos/${{ github.repository }}/commits/$commit_hash" --jq '.author.login')
            COMMITS+="- $COMMIT_MSG (@$AUTHOR)\n"
          done < <(git log --format="%H" $PREV_TAG..HEAD)
          
          echo "commits=$COMMITS" >> $GITHUB_ENV

      - name: Create release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: ${{ github.ref_name }} - ${{ env.release_type }}
          body: |
            ${{ env.commits }}
          draft: false
          prerelease: ${{ env.prerelease }}
